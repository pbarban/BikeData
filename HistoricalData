rm(list = ls(all.names = TRUE))

library(dplyr)

#Paris
library(stringr)
Starting.date = "2021-01-01"
Ending.date = Sys.Date()
n = as.numeric(difftime(as.Date(Ending.date),as.Date(Starting.date), units = c("days")))

seq = seq(as.Date(Starting.date), by = "day", length.out = n)
seq = str_replace_all(seq, "-", "%2F")

library(httr)
library(jsonlite)

data_list <- list()
for (i in seq) {
  res <- GET(paste0("https://opendata.paris.fr/api/records/1.0/search/?dataset=comptage-velo-donnees-compteurs&q=&rows=-1&facet=id_compteur&facet=nom_compteur&facet=id&facet=name&facet=date&facet=installation_date&refine.date=",i,"&timezone=Europe%2FBerlin"))
  data_list[[length(data_list)+1]] = fromJSON(rawToChar(res$content))[["records"]][["fields"]]
}
data = do.call(rbind, data_list)

#optional
dest = "/Users/Pierre/Desktop/Academic/Velo - Paris/Historique/"

setwd(dest)
for (i in seq(2018,2020,1)) {
  url = paste0("https://parisdata.opendatasoft.com/api/datasets/1.0/comptage-velo-historique-donnees-compteurs/attachments/",i,"_comptage_velo_donnees_compteurs_csv_zip/")
  download.file(url,paste0(dest,i,"_comptage_velo_donnees_compteurs.zip"))
  unzip(zipfile = paste0(dest,i,"_comptage_velo_donnees_compteurs.zip"),exdir = ".")
}

temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i], sep = ";"))
temp = list.files(pattern="*.csv|*.zip")
unlink(temp)

Olddata = do.call(rbind,lapply(ls(pattern = "*.csv"), get))

oldnames = c("id_compteur", 
             "nom_compteur" ,
             "id",
             "name",
             "sum_counts" ,
             "date",  
             "installation_date",
             "url_photos_n1", 
             "coordinates")
newnames = c("Identifiant.du.compteur",
             "Nom.du.compteur" ,
             "Identifiant.du.site.de.comptage",  
             "Nom.du.site.de.comptage" ,      
             "Comptage.horaire"  ,    
             "Date.et.heure.de.comptage" ,             
             "Date.d.installation.du.site.de.comptage",
             "Lien.vers.photo.du.site.de.comptage" ,   
             "Coordonnées.géographiques")

data = data %>% rename_at(vars(oldnames), ~ newnames)

Paris = rbind(data, Olddata)


library(dplyr)
Paris = Paris%>% mutate(Datetime = str_replace_all(Date.et.heure.de.comptage,"T", " "),
                        Datetime = substr(Datetime,1,19),
                        Datetime = as.POSIXct(Datetime, format = "%Y-%m-%d %H:%M:%S"),
                        Date = as.Date(Datetime)) 


Events =data.frame(Events=c("Public Transit Strike","First Lockdown","Second Lockdown","Curfew"),
                   Beginning=c(as.Date("2019-12-05"),as.Date("2020-03-17"),as.Date("2020-10-30"),as.Date("2021-01-16")),
                   End=c(as.Date("2020-01-17"),as.Date("2020-05-11"),as.Date("2020-12-15"),Sys.Date()),
                   ymin=c(-Inf,-Inf,-Inf,-Inf),
                   ymax=c(Inf,Inf,Inf,Inf))




library(ggplot2)
plot1.Paris = Paris %>% 
  mutate(Datetime = str_replace_all(Date.et.heure.de.comptage,"T", " "),
         Datetime = substr(Datetime,1,19),
         Datetime = as.POSIXct(Datetime, format = "%Y-%m-%d %H:%M:%S"),
         Date = as.Date(Datetime))%>%
  group_by(Datetime) %>% 
  summarise(mean=mean(Comptage.horaire), sd=sd(Comptage.horaire))%>%
  merge(Paris,by = "Datetime", all.y = T) %>% group_by(Datetime) %>% 
  add_count() %>%
  mutate(low_ci = mean - 1.96*(sd/sqrt(n)),
         high_ci = mean + 1.96*(sd/sqrt(n))) %>%
  ungroup() %>%
  filter(Comptage.horaire > low_ci & Comptage.horaire < high_ci) %>% group_by(Date) %>% 
  summarise(DayCount = mean(Comptage.horaire))%>% 
  filter(Date > as.Date("2019-01-01")) %>%
  ggplot()+
  geom_rect(data=Events, mapping=aes(xmin= Beginning, xmax=End, ymin=ymin, ymax=ymax, fill=Events), color=NA, alpha=0.5) +
  geom_line(aes(x =Date, y=DayCount),colour='#06067a', size = 0.5)+ 
  ylab("") +
  xlab("") + 
  labs(title = "Average Number of Cyclists per Counting Monitor per Day", subtitle = "Paris, Jan. 2018 - March 2021") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", size = 16),
        plot.subtitle = element_text(colour = "#595a5c", size = 12),
        legend.title = element_blank(),
        legend.text = element_text( size = 10),
        legend.position="top",
        axis.text=element_text(size=10)) +
annotate(
  geom = "curve", x = as.Date("2020-08-05"), y = 500, xend = as.Date("2020-08-28"), yend = 930, 
  curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
  geom_label(aes(x = as.Date("2020-08-05"), y = 300, label = "Mask Mandate \n for pedestrians"), fill = "#ebebeb") +
annotate(
  geom = "curve", x = as.Date("2019-05-01"), y = 2000, xend = as.Date("2019-09-10"), yend = 2300, 
  curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
  geom_label(x = as.Date("2019-05-01"), y = 2000, label = "One Day Public \n Transit Strike", fill = "#ebebeb")
plot1.Paris

ggsave("Paris_cyclists_history.png", device = "png", path ="~/Desktop/Academic/Velo - Paris/Presentation/")
